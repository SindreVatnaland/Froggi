name: Build

on:
    workflow_call:
        inputs:
            runs-on:
                required: true
                type: string
            file:
                required: true
                type: string

jobs:
    deploy:
        timeout-minutes: 30
        runs-on: ${{ inputs['runs-on'] }}
        environment: production
        permissions: write-all
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            - name: Decode and import signing certificate
              if: runner.os == 'macOS'
              run: |
                  echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12

                  security create-keychain -p "" build.keychain
                  security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign

                  security list-keychains -s build.keychain
                  security unlock-keychain -p "" build.keychain
                  security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

                  security find-identity -v -p codesigning

                  security show-keychain-info build.keychain
              env:
                  MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
                  MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}

            - name: install dependencies
              run: npm run install:all

            - name: Test
              run: npm run test

            - name: build
              run: npm run build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create or update GitHub Release
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  prerelease: ${{ contains(github.ref_name, 'beta') }}
                  allowUpdates: false # ✅ Allows updating an existing release
                  replacesArtifacts: true # ✅ Removes old assets and replaces them
                  generateReleaseNotes: true # Or use `body: "Your notes"`
                  token: ${{ secrets.GITHUB_TOKEN }}
