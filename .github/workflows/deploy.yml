name: Build

on:
    workflow_call:
        inputs:
            runs-on:
                required: true
                type: string
            file:
                required: true
                type: string

jobs:
    deploy:
        timeout-minutes: 30
        runs-on: ${{ inputs['runs-on'] }}
        environment: production
        permissions: write-all
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            - name: Preprocess package.json and Generate Cache Key
              id: generate_cache_key
              run: |
                  HASH_INPUT=""
                  find . -name "package.json" | while read file; do
                      PROCESSED_JSON=$(jq 'del(.version)' "$file" | base64)
                      HASH_INPUT="${HASH_INPUT}${PROCESSED_JSON}"
                  done
                  echo "CACHE_KEY=$(echo -n "$HASH_INPUT" | sha256sum | awk '{ print $1 }')" >> $GITHUB_ENV

            - name: Cache NPM Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules
                      frontend/node_modules
                  key: ${{ runner.os }}-node-modules-${{ env.CACHE_KEY }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Decode and import signing certificate
              if: runner.os == 'macOS'
              run: |
                  echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12

                  security create-keychain -p "" build.keychain
                  security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign

                  security list-keychains -s build.keychain
                  security unlock-keychain -p "" build.keychain
                  security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

                  security find-identity -v -p codesigning

                  security show-keychain-info build.keychain
              env:
                  MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
                  MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}

            - name: install dependencies
              run: npm run install:all

            - name: Test
              run: npm run test

            - name: build
              run: npm run build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - uses: softprops/action-gh-release@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT }}
              with:
                  files: ${{ inputs['file'] }}
                  draft: false
                  tag_name: ${{ github.ref_name }}
